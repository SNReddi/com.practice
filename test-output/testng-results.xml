<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="9088" started-at="2021-01-04T10:55:50Z" finished-at="2021-01-04T10:55:59Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="9088" started-at="2021-01-04T10:55:50Z" finished-at="2021-01-04T10:55:59Z">
      <class name="com.slnm.com.practice.TestClass">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.slnm.com.practice.TestClass@3d0f8e03]" name="setup" is-config="true" duration-ms="6858" started-at="2021-01-04T10:55:50Z" finished-at="2021-01-04T10:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="browserLaunch()[pri:0, instance:com.slnm.com.practice.TestClass@3d0f8e03]" name="browserLaunch" duration-ms="1420" started-at="2021-01-04T10:55:57Z" finished-at="2021-01-04T10:55:59Z">
          <exception class="java.lang.IllegalMonitorStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalMonitorStateException
at java.lang.Object.wait(Native Method)
at com.slnm.com.practice.TestClass.browserLaunch(TestClass.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalMonitorStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserLaunch -->
        <test-method status="PASS" signature="Quit()[pri:0, instance:com.slnm.com.practice.TestClass@3d0f8e03]" name="Quit" is-config="true" duration-ms="754" started-at="2021-01-04T10:55:59Z" finished-at="2021-01-04T10:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Quit -->
      </class> <!-- com.slnm.com.practice.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
